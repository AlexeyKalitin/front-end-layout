{"version":3,"sources":["style-modules/Input.module.css","style-modules/filter.module.css","style-modules/TodoList.module.css","style-modules/TodoElement.module.css","components/Input.jsx","components/Filter.jsx","components/TodoElement.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MyInput","newElemSetter","nonExistYet","useState","value","setValue","currentTime","Date","clearRusSymb","string","replace","className","onKeyDown","e","length","key","newElem","getTime","name","done","updatedAt","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","onChange","event","target","placeholder","autoFocus","maxLength","Filter","setSortStatus","activeFilterSort","setActiveFilterSort","activeSortByDate","setActiveSortByDate","useEffect","Group","size","options","label","console","log","optionType","buttonStyle","onClick","icon","DownOutlined","UpOutlined","TodoElement","todo","removeTodo","changeTodoCondition","changeTask","isEditable","setIsEditable","inputValue","setInputValue","changingInput","onBlur","defaultValue","checked","style","textDecoration","danger","DeleteOutlined","TodoList","todos","marginTop","map","index","axios","require","default","userID","process","sereverUrl","App","isLoaded","setIsLoaded","APIResponseError","setAPIResponseError","setTodos","currentPage","setCurrentPage","todosPerPage","getItemsAPI","showAlertAboutError","setTimeout","Math","ceil","prev","filterBy","sortStatus","First","Second","get","URLSearchParams","order","toString","then","response","data","catch","error","message","finally","replaceElementField","elem","field","patchItemAPI","patch","uuid","removeItemAPI","delete","handlerNewElemSetter","item","post","Object","keys","includes","showErrorWindow","animatedLoader","every","x","IsUniqueName","handlerSetSortStatus","slice","filter","indexOf","handlerChangeTodoCondition","newText","handlerChangeTask","current","total","hideOnSinglePage","pageSize","page","changeCurrentPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c37fabfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2mABs\",\"todo__text\":\"Input_todo__text__2VKhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__arrow-active\":\"filter_filter__arrow-active__1CJ4a\",\"filter__arrow-down\":\"filter_filter__arrow-down__2AjvG\",\"filter__button\":\"filter_filter__button__1m8_4\",\"filter__button-active\":\"filter_filter__button-active__2x_pW\",\"sortBy-text\":\"filter_sortBy-text__3blXO\",\"filter__arrow-up\":\"filter_filter__arrow-up__15XdD\",\"filter\":\"filter_filter__1Rtgh\",\"filter-sort\":\"filter_filter-sort__14E_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list\":\"TodoList_todo-list__4vVRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list__input\":\"TodoElement_todo-list__input__8vt4n\",\"ant-checkbox-inner\":\"TodoElement_ant-checkbox-inner__2Xy1P\",\"ant-checkbox-checked\":\"TodoElement_ant-checkbox-checked__1iXQu\",\"todo-list__input-error\":\"TodoElement_todo-list__input-error__34YHg\",\"todo-list__button\":\"TodoElement_todo-list__button__1ew_7\",\"todo-list__text\":\"TodoElement_todo-list__text__3dL6a\",\"todo-list__date\":\"TodoElement_todo-list__date__1ioTQ\",\"todo-list__trashbin\":\"TodoElement_todo-list__trashbin__1vll4\"};","import \"../style-modules/Input.module.css\";\nimport 'antd/dist/antd.css';\nimport { Input } from 'antd';\nimport React, { useState } from \"react\";\n\nfunction MyInput({ newElemSetter, nonExistYet }) {\n  const [value, setValue] = useState(\"\");\n  const currentTime = new Date();\n\n  const handleChange = (event) => {\n    clearRusSymb(event.target.value);\n  };\n\n  const getTime = () => {\n    return `${currentTime.getFullYear()}-${currentTime.getMonth() + 1}-${\n      currentTime.getDay() + 24\n    } ${currentTime.getHours()-3}:${currentTime.getMinutes()}:${currentTime.getSeconds()}`;\n  };\n\n  const clearRusSymb = (string) => {\n    setValue(string.replace(/[А-Яа-я]/g, \"\"));\n  };\n\n  const handlerOnKeyDown = (e) => {\n    if (\n      value[0] !== \" \" &&\n      value !== \"\" &&\n      value.length > 2 &&\n      nonExistYet(value)\n    ) {\n      if (e.key === \"Enter\") {\n        const newElem = {\n          key: currentTime.getTime(),\n          name: value,\n          done: false,\n          updatedAt: getTime(),\n        };\n        setValue(\"\");\n        newElemSetter(newElem);\n      }\n    }\n  };\n\n  return (\n    <div className=\"input\">\n      <Input\n        onKeyDown={handlerOnKeyDown}\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Type task\"\n        autoFocus\n        maxLength=\"16\"\n        className=\"todo__text\"\n      />\n    </div>\n  );\n}\n\nexport default MyInput;\n","import \"../style-modules/filter.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Radio } from \"antd\";\nimport { DownOutlined, UpOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\nfunction Filter({ setSortStatus }) {\n  const [activeFilterSort, setActiveFilterSort] = useState(\"\");\n  const [activeSortByDate, setActiveSortByDate] = useState(\"asc\");\n\n  useEffect(() => {\n    setSortStatus(activeFilterSort, activeSortByDate);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeFilterSort, activeSortByDate]);\n\n  const buttonOptions = [\n    { label: \"all\", value: \"\" },\n    { label: \"done\", value: \"done\" },\n    { label: \"undone\", value: \"undone\" },\n  ];\n\n  const changeFilterSort = (e) => {\n    console.log(e.target.value);\n    setActiveFilterSort(e.target.value);\n  };\n  return (\n    <span className=\"filter\">\n        <Radio.Group\n          size=\"large\"\n          options={buttonOptions}\n          onChange={changeFilterSort}\n          value={activeFilterSort}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n        />\n      <span className=\"filter-sort\">\n        <p className=\"sortBy-text\">Sort by Date</p>\n        <Button\n          onClick={() => {\n            setActiveSortByDate(\"desc\");\n          }}\n          icon={<DownOutlined />}\n        ></Button>\n\n        <Button\n          onClick={() => {\n            setActiveSortByDate(\"asc\");\n          }}\n          icon={<UpOutlined />}\n        ></Button>\n      </span>\n    </span>\n  );\n}\nexport default Filter;\n","import \"../style-modules/TodoElement.module.css\";\nimport { useState } from \"react\";\nimport { Button, Checkbox } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\nfunction TodoElement({ todo, removeTodo, changeTodoCondition, changeTask }) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleKeyDown = (e) => {\n    if (inputValue[0] !== \" \" && inputValue !== \"\" && inputValue.length > 2) {\n      if (e.key === \"Enter\") {\n        changeTask(todo, inputValue);\n        setIsEditable(false);\n      }\n      if (e.key === \"Escape\") {\n        setIsEditable(false);\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    clearRusSymb(e.target.value);\n  };\n\n  const clearRusSymb = (string) => {\n    setInputValue(string.replace(/[А-Яа-я]/g, \"\"));\n  };\n\n  const changingInput = (\n    <input\n      onBlur={() => {\n        setIsEditable(false);\n      }}\n      autoFocus\n      maxLength=\"16\"\n      defaultValue={todo.name}\n      onKeyDown={handleKeyDown}\n      onChange={handleChange}\n      value={inputValue}\n      className=\"todo-list__input\"\n    ></input>\n  );\n\n  const currentDataWithoutSymb = () =>\n    todo.updatedAt.replace(/[A-Z]|(\\.\\d{3})/g, \" \");\n\n  const makeInputEditable = () => {\n    setIsEditable(true);\n    setInputValue(todo.name);\n  };\n\n  return (\n    <li key={todo.key}>\n      <Checkbox onClick={() => changeTodoCondition(todo)} checked={todo.done} />\n      <span onClick={makeInputEditable} className=\"todo-list__text\">\n        {isEditable ? changingInput : <p style={todo.done?{textDecoration:\"line-through\"}:{}}>{todo.name}</p>}\n      </span>\n      <p className=\"todo-list__date\">{currentDataWithoutSymb()}</p>\n      <Button\n        size=\"large\"\n        danger\n        onClick={() => removeTodo(todo)}\n        icon={<DeleteOutlined />}\n      />\n    </li>\n  );\n}\n\nexport default TodoElement;\n","import \"../style-modules/TodoList.module.css\";\nimport TodosElement from \"./TodoElement\";\n\nfunction TodoList({ todos, removeTodo, changeTodoCondition, changeTask }) {\n  if (todos.length === 0) {\n    return <h1 style={{ marginTop: \"2vw\" }}>Nothing...</h1>;\n  } else {\n    return (\n      <ul className=\"todo-list\">\n        {todos.map((todo, index) => {\n          return (\n            <TodosElement\n              key={index}\n              todo={todo}\n              removeTodo={removeTodo}\n              changeTodoCondition={changeTodoCondition}\n              changeTask={changeTask}\n            ></TodosElement>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import \"./style-modules/style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport MyInput from \"./components/Input\";\nimport Filter from \"./components/Filter\";\nimport TodoList from \"./components/TodoList\";\nimport { Pagination } from \"antd\";\n\nimport \"antd/dist/antd.css\";\nconst axios = require(\"axios\").default;\nconst userID = process.env[\"REACT_APP_CLIENT_ID\"];\nconst sereverUrl = process.env[\"REACT_APP_SERVER_URL\"];\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [APIResponseError, setAPIResponseError] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage] = useState(5);\n\n  useEffect(() => {\n    getItemsAPI(\"\", \"asc\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    showAlertAboutError(APIResponseError);\n    setTimeout(() => setAPIResponseError(false), 5000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [APIResponseError]);\n\n  useEffect(() => {\n    if (\n      Math.ceil(todos.length / todosPerPage) < currentPage &&\n      currentPage > 1\n    ) {\n      setCurrentPage((prev) => prev - 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [todos.length]);\n\n  const queryString = (First, Second) =>\n    new URLSearchParams({ filterBy: First, order: Second }).toString();\n\n  const getItemsAPI = (filterBy, sortStatus) => {\n    setIsLoaded(true);\n    axios\n      .get(`${sereverUrl}/tasks/${userID}?${queryString(filterBy, sortStatus)}`)\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        setAPIResponseError(error.message);\n      })\n      .finally(setIsLoaded(false));\n  };\n\n  const showAlertAboutError = () => {\n    setAPIResponseError(APIResponseError);\n  };\n\n  const handlerRemoveTodo = (elem) => {\n    removeItemAPI(elem);\n    setTodos(todos.filter((x) => x !== elem));\n  };\n\n  const replaceElementField = (elem, field, value) => {\n    if (field === \"done\") {\n      elem.done = value;\n    }\n    if (field === \"name\") {\n      elem.name = value;\n    }\n  };\n\n  const handlerChangeTodoCondition = (elem) => {\n    replaceElementField(elem, \"done\", !elem.done);\n    todos[todos.indexOf(elem)] = elem;\n    setTodos(todos.slice(0));\n    patchItemAPI(elem);\n  };\n\n  const handlerChangeTask = (elem, newText) => {\n    replaceElementField(elem, \"name\", newText.slice(0));\n    todos[todos.indexOf(elem)] = elem;\n    setTodos(todos.slice(0));\n    patchItemAPI(elem);\n  };\n\n  const patchItemAPI = (elem) => {\n    setIsLoaded(true);\n    axios\n      .patch(`${sereverUrl}/task/${userID}/${elem.uuid}`, elem)\n      .catch((error) => {\n        setAPIResponseError(error.message);\n      })\n      .finally(() => {\n        setIsLoaded(false);\n      });\n  };\n\n  const removeItemAPI = (elem) => {\n    axios.delete(`${sereverUrl}/task/${userID}/${elem.uuid}`).catch((error) => {\n      setAPIResponseError(error.message);\n    });\n  };\n\n  const setItemAPI = (item) => {\n    axios\n      .post(`${sereverUrl}/task/${userID}`, item)\n      .then((response) => {\n        if (!Object.keys(response.data).includes(\"uuid\")) {\n          setAPIResponseError(\"Object without uuid\");\n        } else item.uuid = response.data.uuid;\n      })\n      .catch((error) => {\n        setAPIResponseError(error.message);\n      });\n  };\n\n  const handlerNewElemSetter = (newElem) => {\n    setItemAPI(newElem);\n    setTodos([...todos, newElem]);\n  };\n\n  const handlerSetSortStatus = (sortStatus, filterBy) => {\n    getItemsAPI(sortStatus, filterBy);\n    setCurrentPage(1);\n  };\n\n  const IsUniqueName = (value) => {\n    return todos.every((x) => x.name !== value);\n  };\n\n  const showErrorWindow = APIResponseError !== false && (\n    <div className=\"alert-about-error\">\n      <p>{APIResponseError}</p>\n    </div>\n  );\n\n  const animatedLoader = (\n    <div className=\"animated-loader\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n  const changeCurrentPage = (page, pageSize) => {\n    setCurrentPage(page);\n  };\n  return (\n    <div className=\"conteiner\">\n      {showErrorWindow}\n      <div>\n        <div className=\"todo\">\n          <h1>ToDo</h1>\n          <MyInput\n            newElemSetter={(newElem) => handlerNewElemSetter(newElem)}\n            nonExistYet={(value) => IsUniqueName(value)}\n          />\n        </div>\n\n        <Filter\n          setSortStatus={(sortStatus, filterBy) =>\n            handlerSetSortStatus(sortStatus, filterBy)\n          }\n        />\n      </div>\n      {!isLoaded ? (\n        <TodoList\n          todos={todos.slice(\n            (currentPage - 1) * todosPerPage,\n            currentPage * todosPerPage\n          )}\n          removeTodo={(uuid) => handlerRemoveTodo(uuid)}\n          changeTodoCondition={(elem) => handlerChangeTodoCondition(elem)}\n          changeTask={(elem, newText) => handlerChangeTask(elem, newText)}\n        ></TodoList>\n      ) : (\n        animatedLoader\n      )}\n      <Pagination\n        size=\"default\"\n        className=\"ant-pagination paginate\"\n        current={currentPage}\n        total={todos.length}\n        hideOnSinglePage\n        pageSize={todosPerPage}\n        onChange={(page, pageSize) => changeCurrentPage(page, pageSize)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
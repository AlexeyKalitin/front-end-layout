{"version":3,"sources":["style-modules/Input.module.css","style-modules/filter.module.css","style-modules/Paginate.module.css","style-modules/TodoList.module.css","style-modules/TodoElement.module.css","components/Input.jsx","images/arrowup.svg","images/arrowdown.svg","components/filterButton.jsx","components/Filter.jsx","components/Paginate.jsx","images/undone.svg","images/trash.svg","images/icon.svg","components/TodoElement.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","newElemSetter","useState","value","setValue","currentDate","Date","className","onKeyDown","e","key","newElem","getTime","text","isDone","date","getDay","getMonth","getFullYear","getHours","getMinutes","getSeconds","onChange","event","target","placeholder","autoFocus","maxLength","FilterButton","todosFilter","FilterSort","activeFilterSort","sortType","onClick","Filter","setSortStatus","setActiveFilterSort","handlerFilterSort","filterChoose","ButtonArrowDown","alt","src","arrowdown","ButtonArrowUp","arrowup","Paginate","setCurrentPage","currentPage","countTodoElem","countElemPerPage","arr","filterArr","pageCount","i","push","slice","concat","length","sort","a","b","Set","map","ind","TodoElement","todo","removeTodo","changeTodoCondition","changeTask","isEditable","setIsEditable","title","undone","done","onBlur","defaultValue","trashbin","TodoList","todos","style","marginTop","index","App","useEffect","console","log","localStorage","getItem","undefined","JSON","parse","setFilterTodos","setTodos","setItem","stringify","filterTodos","todosPerPage","handlerNewElemSetter","status","filter","item","sortStatus","sortedTodos","handlerSetSortStatus","x","handlerRemoveTodo","upgradedElem","forEach","elem","handlerChangeTodoCondition","newText","handlerChangeTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dc0d0b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2G47M\",\"todo__text\":\"Input_todo__text__1pn4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__arrow-active\":\"filter_filter__arrow-active__1rsU3\",\"filter__arrow-down\":\"filter_filter__arrow-down__3uVRN\",\"filter__button\":\"filter_filter__button__18e3v\",\"sortBy-text\":\"filter_sortBy-text__29SEO\",\"filter__arrow-up\":\"filter_filter__arrow-up__OP7g5\",\"filter\":\"filter_filter__3XliD\",\"filter-sort\":\"filter_filter-sort__1JOTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginate__button\":\"Paginate_paginate__button__2zzEP\",\"paginate__button-active\":\"Paginate_paginate__button-active__hrUrT\",\"paginate\":\"Paginate_paginate__nl--3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list\":\"TodoList_todo-list__xYulE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list__input\":\"TodoElement_todo-list__input__2O389\",\"todo\":\"TodoElement_todo__2tCc6\",\"todo-list__input-error\":\"TodoElement_todo-list__input-error__1firz\",\"todo-list__button\":\"TodoElement_todo-list__button__ag80b\",\"todo-list__text\":\"TodoElement_todo-list__text__22rfw\",\"todo-list__date\":\"TodoElement_todo-list__date__2tVnB\",\"todo-list__trashbin\":\"TodoElement_todo-list__trashbin__1rkC7\"};","import \"../style-modules/Input.module.css\";\nimport React, { useState } from \"react\";\n\nfunction Input({ newElemSetter }) {\n  const [value, setValue] = useState(\"\");\n  const currentDate = new Date();\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handlerOnKeyDown = (e) => {\n    if (value[0] !== \" \" && value !== \"\") {\n      if (e.key === \"Enter\") {\n        const newElem = {\n          key: currentDate.getTime(),\n          text: value,\n          isDone: false,\n          date: `${currentDate.getDay()}.${\n            currentDate.getMonth() + 1\n          }.${currentDate.getFullYear()} ${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`,\n        };\n        setValue(\"\");\n        newElemSetter(newElem);\n      }\n    }\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        onKeyDown={handlerOnKeyDown}\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Type task\"\n        autoFocus\n        maxLength=\"16\"\n        className=\"todo__text\"\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/arrowup.d526aa02.svg\";","export default __webpack_public_path__ + \"static/media/arrowdown.37fca0e1.svg\";","import React from \"react\";\r\n\r\nfunction FilterButton({\r\n  todosFilter,\r\n  FilterSort,\r\n  activeFilterSort,\r\n  value,\r\n  sortType,\r\n}) {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        todosFilter(value);\r\n        FilterSort(sortType);\r\n      }}\r\n      className={\r\n        activeFilterSort === sortType\r\n          ? \"filter__button-active\"\r\n          : \"filter__button\"\r\n      }\r\n    >\r\n      {sortType}\r\n    </button>\r\n  );\r\n}\r\nexport default FilterButton;\r\n","import \"../style-modules/filter.module.css\";\nimport React, { useState } from \"react\";\nimport arrowup from \"../images/arrowup.svg\";\nimport arrowdown from \"../images/arrowdown.svg\";\nimport FilterButton from \"./filterButton\";\n\nfunction Filter({ todosFilter, setSortStatus }) {\n  const [activeFilterSort, setActiveFilterSort] = useState(\"all\");\n\n  const handlerFilterSort = (filterChoose) => {\n    setActiveFilterSort(filterChoose);\n  };\n\n  const ButtonArrowDown = (\n    <button\n      onClick={() => {\n        setSortStatus(\"down\");\n      }}\n      className={\"filter__arrow-down\"}\n    >\n      <img alt=\"arrowdown\" src={arrowdown} />\n    </button>\n  );\n\n  const ButtonArrowUp = (\n    <button\n      onClick={() => {\n        setSortStatus(\"up\");\n      }}\n      className={\"filter__arrow-up\"}\n    >\n      <img alt=\"arrowup\" src={arrowup} />\n    </button>\n  );\n\n  return (\n    <span className=\"filter\">\n      <span className=\"filter-buttons\">\n        <FilterButton\n          todosFilter={todosFilter}\n          FilterSort={handlerFilterSort}\n          activeFilterSort={activeFilterSort}\n          value=\"all\"\n          sortType=\"all\"\n        />\n        <FilterButton\n          todosFilter={todosFilter}\n          FilterSort={handlerFilterSort}\n          activeFilterSort={activeFilterSort}\n          value={true}\n          sortType=\"done\"\n        />\n        <FilterButton\n          todosFilter={todosFilter}\n          FilterSort={handlerFilterSort}\n          activeFilterSort={activeFilterSort}\n          value={false}\n          sortType=\"undone\"\n        />\n      </span>\n      <span className=\"filter-sort\">\n        <p className=\"sortBy-text\">Sort by Date</p>\n        {ButtonArrowDown}\n        {ButtonArrowUp}\n      </span>\n    </span>\n  );\n}\nexport default Filter;\n","import \"../style-modules/Paginate.module.css\";\nimport React from \"react\";\n\nfunction Paginate({\n  setCurrentPage,\n  currentPage,\n  countTodoElem,\n  countElemPerPage,\n}) {\n  const arr = [];\n  let filterArr = [];\n  const pageCount = countTodoElem / countElemPerPage;\n  const maxPaginateButtons = 9;\n\n  for (let i = 1; i < pageCount + 1; i++) {\n    arr.push(i);\n  }\n  filterArr = arr.slice(0);\n\n  if ((countTodoElem - 1) / countElemPerPage < currentPage && currentPage > 0) {\n    setCurrentPage(currentPage - 1);\n  }\n\n  if (pageCount > maxPaginateButtons) {\n    filterArr = arr\n      .slice(0, 2)\n      .concat(arr.slice(currentPage - 1, currentPage + 2))\n      .concat(arr.slice(-3, -1))\n      .concat(arr[arr.length - 1])\n      .sort((a, b) => a - b);\n    filterArr = [...new Set(filterArr)];\n  }\n\n  const clickHandler = () => {\n    if (pageCount - 1 > currentPage) setCurrentPage(currentPage + 1);\n  };\n\n  return (\n    <div className=\"paginate\">\n      <div className=\"paginate__button\">\n        <button\n          className=\"paginate__button\"\n          onClick={() => {\n            if (currentPage > 0) setCurrentPage(currentPage - 1);\n          }}\n        >\n          Prev\n        </button>\n      </div>\n      {filterArr.map((ind) => {\n        if (arr.length > 1) {\n          return (\n            <div key={ind} className=\"paginate__button\">\n              <button\n                className={\n                  ind - 1 === currentPage\n                    ? \"paginate__button paginate__button-active\"\n                    : \"paginate__button\"\n                }\n                onClick={() => {\n                  setCurrentPage(ind - 1);\n                }}\n              >\n                {ind}\n              </button>\n            </div>\n          );\n        } else return <div key={ind}></div>;\n      })}\n\n      <div className=\"paginate__button\">\n        <button className=\"paginate__button\" onClick={clickHandler}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Paginate;\n","export default __webpack_public_path__ + \"static/media/undone.244b6687.svg\";","export default __webpack_public_path__ + \"static/media/trash.1129c53a.svg\";","export default __webpack_public_path__ + \"static/media/icon.6a318b8d.svg\";","import \"../style-modules/TodoElement.module.css\";\nimport undone from \"../images/undone.svg\";\nimport trashbin from \"../images/trash.svg\";\nimport done from \"../images/icon.svg\";\nimport { useState } from \"react\";\n\nfunction TodoElement({ todo, removeTodo, changeTodoCondition, changeTask }) {\n  const [isEditable, setIsEditable] = useState(false);\n\n  const handleKeyDown = (e) => {\n    e.target.className = \"todo-list__input\";\n    if (e.target.value[0] !== \" \" && e.target.value !== \"\") {\n      if (e.key === \"Enter\") {\n        changeTask(todo.key, e.target.value);\n        setIsEditable(false);\n      }\n      if (e.key === \"Escape\") {\n        setIsEditable(false);\n      }\n    } else {\n      e.target.className = \"todo-list__input-error\";\n    }\n  };\n\n  return (\n    <li key={todo.key} >\n      <button\n        onClick={() => changeTodoCondition(todo.key)}\n        title=\"done\"\n        className=\"todo-list__button\"\n      >\n        <img\n          alt=\"undone\"\n          src={todo.isDone === false ? undone : done}\n          className=\"todo-list__picture\"\n        />\n      </button>\n\n      <span onClick={() => setIsEditable(true)} className=\"todo-list__text\">\n        {isEditable ? (\n          <input\n            onBlur={() => {\n              setIsEditable(false);\n            }}\n            autoFocus\n            maxLength=\"16\"\n            defaultValue={todo.text}\n            onKeyDown={handleKeyDown}\n            className=\"todo-list__input\"\n          ></input>\n        ) : (\n          <p>{todo.text}</p>\n        )}\n      </span>\n\n      <p className=\"todo-list__date\">{todo.date}</p>\n      <button\n        onClick={() => removeTodo(todo.key)}\n        title=\"delete\"\n        className=\"todo-list__trashbin\"\n      >\n        <img alt=\"delete\" src={trashbin} />\n      </button>\n    </li>\n  );\n}\n\nexport default TodoElement;\n","import \"../style-modules/TodoList.module.css\";\nimport TodosElement from \"./TodoElement\";\n\nfunction TodoList( { todos, removeTodo, changeTodoCondition, changeTask }) {\n\n  if (todos.length === 0) {\n    return <h1 style={{ marginTop: \"2vw\" }}>Nothing...</h1>;\n  } else {\n    return (\n      <ul className=\"todo-list\">\n        {todos.map((todo, index) => {\n          return (\n            <TodosElement\n              key={index}\n              todo={todo}\n              removeTodo={removeTodo}\n              changeTodoCondition={changeTodoCondition}\n              changeTask={changeTask}\n            ></TodosElement>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import \"./style-modules/style.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Input from \"./components/Input\";\r\nimport Filter from \"./components/Filter\";\r\nimport Paginate from \"./components/Paginate\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    console.log(localStorage.getItem(\"Todos\"))\r\n    const response = localStorage.getItem(\"Todos\") !== undefined && localStorage.getItem(\"Todos\") !== null\r\n    if (response) {\r\n      const a = JSON.parse(localStorage.getItem(\"Todos\"));\r\n      setFilterTodos(a);\r\n      setTodos(a);\r\n    }\r\n    return function kk(){\r\n      localStorage.setItem(\"Todos\", JSON.stringify(todos));\r\n    }\r\n  }, []);\r\n  const [todos, setTodos] = useState([]);\r\n  const [filterTodos, setFilterTodos] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [todosPerPage] = useState(5);\r\n\r\n\r\n  function todosFilter(status) {\r\n    if (status === \"all\") {\r\n      setFilterTodos(todos);\r\n    } else {\r\n      setFilterTodos(todos.filter((item) => item.isDone === status));\r\n    }\r\n    setCurrentPage(0);\r\n  }\r\n\r\n  const handlerRemoveTodo = (key) => {\r\n    setTodos(todos.filter((x) => x.key !== key));\r\n    setFilterTodos(filterTodos.filter((x) => x.key !== key));\r\n  };\r\n\r\n  const handlerChangeTodoCondition = (key) => {\r\n    let upgradedElem = todos.slice(0);\r\n    todos.forEach((elem, ind) => {\r\n      if (elem.key === key) {\r\n        upgradedElem[ind].isDone = true;\r\n      }\r\n    });\r\n    setTodos(upgradedElem);\r\n\r\n    upgradedElem = filterTodos.slice(0);\r\n    filterTodos.forEach((elem, ind) => {\r\n      if (elem.key === key) {\r\n        upgradedElem[ind].isDone = true;\r\n      }\r\n    });\r\n    setFilterTodos(upgradedElem);\r\n  };\r\n\r\n  const handlerChangeTask = (key, newText) => {\r\n    let upgradedElem = todos.slice(0);\r\n    todos.forEach((elem, ind) => {\r\n      if (elem.key === key) {\r\n        upgradedElem[ind].text = newText;\r\n      }\r\n    });\r\n    setTodos(upgradedElem);\r\n\r\n    upgradedElem = filterTodos.slice(0);\r\n    filterTodos.forEach((elem, ind) => {\r\n      if (elem.key === key) {\r\n        upgradedElem[ind].text = newText;\r\n      }\r\n    });\r\n    setFilterTodos(upgradedElem);\r\n  };\r\n\r\n  const handlerNewElemSetter = (newElem) => {\r\n    setTodos([...todos, newElem]);\r\n    setFilterTodos([...filterTodos, newElem]);\r\n  };\r\n\r\n  const handlerSetSortStatus = (sortStatus) => {\r\n    let sortedTodos = filterTodos.sort((a, b) => a.key - b.key).slice(0);\r\n    if (sortStatus === \"down\") {\r\n      sortedTodos = filterTodos.sort((a, b) => b.key - a.key).slice(0);\r\n    }\r\n    setFilterTodos(sortedTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"conteiner\">\r\n      <div>\r\n        <div className=\"todo\">\r\n          <h1>ToDo</h1>\r\n          <Input\r\n            newElemSetter={(newElem) => handlerNewElemSetter(newElem)}\r\n          ></Input>\r\n        </div>\r\n        <Filter\r\n          todosFilter={(status) => todosFilter(status)}\r\n          setSortStatus={(sortStatus) => handlerSetSortStatus(sortStatus)}\r\n        />\r\n        <div className=\"todo-main\"></div>\r\n      </div>\r\n      <TodoList\r\n        todos={filterTodos.slice(\r\n          currentPage * todosPerPage,\r\n          currentPage * todosPerPage + todosPerPage\r\n        )}\r\n        removeTodo={(key) => handlerRemoveTodo(key)}\r\n        changeTodoCondition={(key) => handlerChangeTodoCondition(key)}\r\n        changeTask={(key, newText) => handlerChangeTask(key, newText)}\r\n      ></TodoList>\r\n      {todos.length > 0 && (\r\n        <Paginate\r\n          setCurrentPage={(value) => setCurrentPage(value)}\r\n          currentPage={currentPage}\r\n          countTodoElem={filterTodos.length}\r\n          countElemPerPage={todosPerPage}\r\n        ></Paginate>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["style-modules/Input.module.css","style-modules/filter.module.css","style-modules/Paginate.module.css","style-modules/TodoList.module.css","style-modules/TodoElement.module.css","components/Input.jsx","images/arrowup.svg","images/arrowdown.svg","components/filterButton.jsx","components/Filter.jsx","components/Paginate.jsx","images/undone.svg","images/trash.svg","images/icon.svg","components/TodoElement.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","newElemSetter","nonExistYet","useState","value","setValue","currentTime","Date","clearRusSymb","string","replace","className","onKeyDown","e","length","key","console","log","newElem","getTime","name","done","updatedAt","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","onChange","event","target","placeholder","autoFocus","maxLength","FilterButton","text","setActiveFilterSort","activeFilterSort","onClick","Filter","setSortStatus","activeSortByDate","setActiveSortByDate","useEffect","ButtonArrowDown","alt","src","arrowdown","ButtonArrowUp","arrowup","Paginate","setCurrentPage","currentPage","countTodoElem","countElemPerPage","arr","filterArr","pageCount","i","push","slice","concat","sort","a","b","Set","todosShown","map","ind","changeCurrentPage","TodoElement","todo","removeTodo","changeTodoCondition","changeTask","isEditable","setIsEditable","inputValue","setInputValue","changingInput","onBlur","defaultValue","changeConditionButton","title","undone","removeTodoButton","trashbin","TodoList","todos","style","marginTop","index","axios","require","default","apiKey","process","sereverUrl","App","isLoaded","setIsLoaded","APIResponseError","setAPIResponseError","setTodos","todosPerPage","getItemsAPI","filterBy","sortStatus","get","finally","then","response","data","catch","error","showAlertAboutError","message","setTimeout","replaceElementField","elem","field","patchItemAPI","patch","uuid","removeItemAPI","delete","handlerNewElemSetter","item","post","showErrorWindow","animatedLoader","every","x","IsUniqueName","handlerSetSortStatus","filter","indexOf","handlerChangeTodoCondition","newText","handlerChangeTask","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c180b4ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2mABs\",\"todo__text\":\"Input_todo__text__2VKhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__arrow-active\":\"filter_filter__arrow-active__1CJ4a\",\"filter__arrow-down\":\"filter_filter__arrow-down__2AjvG\",\"filter__button\":\"filter_filter__button__1m8_4\",\"filter__button-active\":\"filter_filter__button-active__2x_pW\",\"sortBy-text\":\"filter_sortBy-text__3blXO\",\"filter__arrow-up\":\"filter_filter__arrow-up__15XdD\",\"filter\":\"filter_filter__1Rtgh\",\"filter-sort\":\"filter_filter-sort__14E_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginate__button\":\"Paginate_paginate__button__2oRGJ\",\"paginate__button-active\":\"Paginate_paginate__button-active__1H2qi\",\"paginate\":\"Paginate_paginate__3owsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list\":\"TodoList_todo-list__4vVRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list__input\":\"TodoElement_todo-list__input__8vt4n\",\"todo\":\"TodoElement_todo__tC1Ag\",\"todo-list__input-error\":\"TodoElement_todo-list__input-error__34YHg\",\"todo-list__button\":\"TodoElement_todo-list__button__1ew_7\",\"todo-list__text\":\"TodoElement_todo-list__text__3dL6a\",\"todo-list__date\":\"TodoElement_todo-list__date__1ioTQ\",\"todo-list__trashbin\":\"TodoElement_todo-list__trashbin__1vll4\"};","import \"../style-modules/Input.module.css\";\nimport React, { useState } from \"react\";\n\nfunction Input({ newElemSetter, nonExistYet }) {\n  const [value, setValue] = useState(\"\");\n  const currentTime = new Date();\n\n  const handleChange = (event) => {\n    clearRusSymb(event.target.value);\n  };\n\n  const getTime = () => {\n    return `${currentTime.getFullYear()}-${currentTime.getMonth() + 1}-${\n      currentTime.getDay() + 24\n    } ${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}`;\n  };\n\n  const clearRusSymb = (string) => {\n    setValue(string.replace(/[А-Яа-я]/g, \"\"));\n  };\n\n  const handlerOnKeyDown = (e) => {\n    if (\n      value[0] !== \" \" &&\n      value !== \"\" &&\n      value.length > 2 &&\n      nonExistYet(value)\n    ) {\n      if (e.key === \"Enter\") {\n        console.log(value);\n        const newElem = {\n          key: currentTime.getTime(),\n          name: value,\n          done: false,\n          updatedAt: getTime(),\n        };\n        setValue(\"\");\n        newElemSetter(newElem);\n      }\n    }\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        onKeyDown={handlerOnKeyDown}\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Type task\"\n        autoFocus\n        maxLength=\"16\"\n        className=\"todo__text\"\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/arrowup.d526aa02.svg\";","export default __webpack_public_path__ + \"static/media/arrowdown.37fca0e1.svg\";","import React from \"react\";\n\nfunction FilterButton({ text, setActiveFilterSort, activeFilterSort }) {\n  return (\n    <button\n      onClick={() => {\n        setActiveFilterSort(text);\n      }}\n      className={activeFilterSort === text?\"filter__button-active\":\"filter__button\"}\n    >\n      {text}\n    </button>\n  );\n}\nexport default FilterButton;\n","import \"../style-modules/filter.module.css\";\nimport React, { useState,useEffect } from \"react\";\nimport arrowup from \"../images/arrowup.svg\";\nimport arrowdown from \"../images/arrowdown.svg\";\nimport FilterButton from \"./filterButton\";\n\nfunction Filter({ setSortStatus }) {\n  const [activeFilterSort, setActiveFilterSort] = useState(\"all\");\n  const [activeSortByDate, setActiveSortByDate] = useState(\"asc\");\n  \n  useEffect(() => {\n    setSortStatus(activeFilterSort, activeSortByDate);\n  }, [activeFilterSort,activeSortByDate]);\n\n  const ButtonArrowDown = (\n    <button\n      onClick={() => {\n        setActiveSortByDate(\"desc\");\n      }}\n      className={\"filter__arrow-down\"}\n    >\n      <img alt=\"arrowdown\" src={arrowdown} />\n    </button>\n  );\n\n  const ButtonArrowUp = (\n    <button\n      onClick={() => {\n        setActiveSortByDate(\"asc\");\n      }}\n      className={\"filter__arrow-up\"}\n    >\n      <img alt=\"arrowup\" src={arrowup} />\n    </button>\n  );\n\n  return (\n    <span className=\"filter\">\n      <span className=\"filter-buttons\">\n        <FilterButton\n          text=\"all\"\n          setActiveFilterSort={setActiveFilterSort}\n          activeFilterSort={activeFilterSort}\n        ></FilterButton>\n        <FilterButton\n          text=\"done\"\n          setActiveFilterSort={setActiveFilterSort}\n          activeFilterSort={activeFilterSort}\n        ></FilterButton>\n        <FilterButton\n          text=\"undone\"\n          setActiveFilterSort={setActiveFilterSort}\n          activeFilterSort={activeFilterSort}\n        ></FilterButton>\n      </span>\n      <span className=\"filter-sort\">\n        <p className=\"sortBy-text\">Sort by Date</p>\n        {ButtonArrowDown}\n        {ButtonArrowUp}\n      </span>\n    </span>\n  );\n}\nexport default Filter;\n","import \"../style-modules/Paginate.module.css\";\nimport React from \"react\";\n\nfunction Paginate({\n  setCurrentPage,\n  currentPage,\n  countTodoElem,\n  countElemPerPage,\n}) {\n  const arr = [];\n  let filterArr = [];\n  const pageCount = countTodoElem / countElemPerPage;\n  const maxPaginateButtons = 9;\n\n  for (let i = 1; i < pageCount + 1; i++) {\n    arr.push(i);\n  }\n  filterArr = arr.slice(0);\n\n  if ((countTodoElem - 1) / countElemPerPage < currentPage && currentPage > 0) {\n    setCurrentPage(currentPage - 1);\n  }\n\n  if (pageCount > maxPaginateButtons) {\n    filterArr = arr\n      .slice(0, 2)\n      .concat(arr.slice(currentPage - 1, currentPage + 2))\n      .concat(arr.slice(-3, -1))\n      .concat(arr[arr.length - 1])\n      .sort((a, b) => a - b);\n    filterArr = [...new Set(filterArr)];\n  }\n\n  const clickHandler = () => {\n    if (pageCount - 1 > currentPage) setCurrentPage(currentPage + 1);\n  };\n\n  const setPrevPage = () => {\n    if (currentPage > 0) setCurrentPage(currentPage - 1);\n  };\n\n  const changeCurrentPage = (ind) => {\n    setCurrentPage(ind - 1);\n  };\n\n  const todosShown = filterArr.map((ind) => {\n    if (arr.length > 1) {\n      return (\n        <div key={ind} className=\"paginate__button\">\n          <button\n            className={\n              ind - 1 === currentPage\n                ? \"paginate__button paginate__button-active\"\n                : \"paginate__button\"\n            }\n            onClick={() => changeCurrentPage(ind)}\n          >\n            {ind}\n          </button>\n        </div>\n      );\n    } else return <div key={ind}></div>;\n  });\n\n  return (\n    <div className=\"paginate\">\n      <div className=\"paginate__button\">\n        <button className=\"paginate__button\" onClick={setPrevPage}>\n          Prev\n        </button>\n      </div>\n      {todosShown}\n      <div className=\"paginate__button\">\n        <button className=\"paginate__button\" onClick={clickHandler}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Paginate;\n","export default __webpack_public_path__ + \"static/media/undone.244b6687.svg\";","export default __webpack_public_path__ + \"static/media/trash.1129c53a.svg\";","export default __webpack_public_path__ + \"static/media/icon.6a318b8d.svg\";","import \"../style-modules/TodoElement.module.css\";\nimport undone from \"../images/undone.svg\";\nimport trashbin from \"../images/trash.svg\";\nimport done from \"../images/icon.svg\";\nimport { useState } from \"react\";\n\nfunction TodoElement({ todo, removeTodo, changeTodoCondition, changeTask }) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleKeyDown = (e) => {\n    e.target.className = \"todo-list__input\";\n    if (inputValue !== \" \" && inputValue !== \"\") {\n      if (e.key === \"Enter\") {\n        changeTask(todo, inputValue);\n        setIsEditable(false);\n      }\n      if (e.key === \"Escape\") {\n        setIsEditable(false);\n      }\n    } else {\n      e.target.className = \"todo-list__input-error\"; //ok?\n    }\n  };\n\n  const handleChange = (e) => {\n    clearRusSymb(e.target.value);\n  };\n\n  const clearRusSymb = (string) => {\n    setInputValue(string.replace(/[А-Яа-я]/g, \"\"));\n  };\n\n  const changingInput = (\n    <input\n      onBlur={() => {\n        setIsEditable(false);\n      }}\n      autoFocus\n      maxLength=\"16\"\n      defaultValue={todo.name}\n      onKeyDown={handleKeyDown}\n      onChange={handleChange}\n      value={inputValue}\n      className=\"todo-list__input\"\n    ></input>\n  );\n\n  const changeConditionButton = (\n    <button\n      onClick={() => changeTodoCondition(todo)}\n      title=\"done\"\n      className=\"todo-list__button\"\n    >\n      <img\n        alt=\"undone\"\n        src={todo.done === false ? undone : done}\n        className=\"todo-list__picture\"\n      />\n    </button>\n  );\n\n  const removeTodoButton = (\n    <button\n      onClick={() => removeTodo(todo)}\n      title=\"delete\"\n      className=\"todo-list__trashbin\"\n    >\n      <img alt=\"delete\" src={trashbin} />\n    </button>\n  );\n\n  const currentDataWithoutRusSymb = () =>\n    todo.updatedAt.replace(/[A-Z]|(\\.\\d{3})/g, \" \");\n\n  const makeInputEditable = () => {\n    setIsEditable(true);\n    setInputValue(todo.name);\n  };\n\n  return (\n    <li key={todo.key}>\n      {changeConditionButton}\n      <span onClick={makeInputEditable} className=\"todo-list__text\">\n        {isEditable ? changingInput : <p>{todo.name}</p>}\n      </span>\n      <p className=\"todo-list__date\">{currentDataWithoutRusSymb()}</p>\n      {removeTodoButton}\n    </li>\n  );\n}\n\nexport default TodoElement;\n","import \"../style-modules/TodoList.module.css\";\nimport TodosElement from \"./TodoElement\";\n\nfunction TodoList( { todos, removeTodo, changeTodoCondition, changeTask }) {\n\n  if (todos.length === 0) {\n    return <h1 style={{ marginTop: \"2vw\" }}>Nothing...</h1>;\n  } else {\n    return (\n      <ul className=\"todo-list\">\n        {todos.map((todo, index) => {\n          return (\n            <TodosElement\n              key={index}\n              todo={todo}\n              removeTodo={removeTodo}\n              changeTodoCondition={changeTodoCondition}\n              changeTask={changeTask}\n            ></TodosElement>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import \"./style-modules/style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport Filter from \"./components/Filter\";\nimport Paginate from \"./components/Paginate\";\nimport TodoList from \"./components/TodoList\";\nconst axios = require(\"axios\").default;\nconst apiKey = process.env[\"REACT_APP_CLIENT_ID\"];\nconst sereverUrl = \"https://todo-api-learning.herokuapp.com/v1\";\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [APIResponseError, setAPIResponseError] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [todosPerPage] = useState(5);\n\n  useEffect(() => {\n    setIsLoaded(true);\n    getItemsAPI(\"all\", \"asc\");\n    setIsLoaded(false);\n  }, []);\n\n  const getItemsAPI = (filterBy, sortStatus) => {\n    setIsLoaded(true);\n    console.log(sortStatus, filterBy);\n    if (filterBy === \"all\") {\n      filterBy = \"\";\n    }\n    axios\n      .get(\n        `${sereverUrl}/tasks/${apiKey}?filterBy=${filterBy}&order=${sortStatus}`\n      )\n      .finally(setIsLoaded(false))\n      .then((response) => {\n        setTodos(response.data);\n        setIsLoaded(false)\n      })\n      .catch((error) => {\n        showAlertAboutError(error.message);\n      });\n  };\n\n  const delay = (ms) => {\n    setTimeout(() => setAPIResponseError(false), ms);\n  };\n\n  const showAlertAboutError = (message) => {\n    setAPIResponseError(message);\n    delay(5000);\n  };\n\n  const handlerRemoveTodo = (elem) => {\n    removeItemAPI(elem);\n    setTodos(todos.filter((x) => x !== elem));\n  };\n\n  const replaceElementField = (elem, field, value) => {\n    if (field === \"done\") {\n      elem.done = value;\n    }\n    if (field === \"name\") {\n      elem.name = value;\n    }\n  };\n\n  const handlerChangeTodoCondition = (elem) => {\n    replaceElementField(elem, \"done\", !elem.done);\n    todos[todos.indexOf(elem)] = elem;\n    setTodos(todos.slice(0));\n    patchItemAPI(elem);\n  };\n\n  const handlerChangeTask = (elem, newText) => {\n    replaceElementField(elem, \"name\", newText.slice(0));\n    todos[todos.indexOf(elem)] = elem;\n    setTodos(todos.slice(0));\n    patchItemAPI(elem);\n  };\n\n  const patchItemAPI = (elem) => {\n    axios\n      .patch(`${sereverUrl}/task/${apiKey}/${elem.uuid}`, elem)\n      .catch((error) => {\n        showAlertAboutError(error.message);\n      });\n  };\n\n  const removeItemAPI = (elem) => {\n    axios.delete(`${sereverUrl}/task/${apiKey}/${elem.uuid}`).catch((error) => {\n      showAlertAboutError(error.message);\n    });\n  };\n\n  const setItemAPI = (item) => {\n    axios\n      .post(`${sereverUrl}/task/${apiKey}`, item)\n      .then((response) => {\n        item.uuid = response.data.uuid;\n      })\n      .catch((error) => {\n        showAlertAboutError(error.message);\n      });\n  };\n\n  const handlerNewElemSetter = (newElem) => {\n    setItemAPI(newElem);\n    setTodos([...todos, newElem]);\n  };\n\n  const handlerSetSortStatus = (sortStatus, filterBy) => {\n    getItemsAPI(sortStatus, filterBy);\n  };\n\n  const IsUniqueName = (value) => {\n    return todos.every((x) => x.name !== value);\n  };\n\n  const showErrorWindow = APIResponseError !== false && (\n    <div className=\"alert-about-error\">\n      <p>{APIResponseError}</p>\n    </div>\n  );\n\n  const animatedLoader = (\n    <div className=\"animated-loader\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n\n  return (\n    <div className=\"conteiner\">\n      {showErrorWindow}\n\n      <div>\n        <div className=\"todo\">\n          <h1>ToDo</h1>\n          <Input\n            newElemSetter={(newElem) => handlerNewElemSetter(newElem)}\n            nonExistYet={(value) => IsUniqueName(value)}\n          />\n        </div>\n\n        <Filter\n          setSortStatus={(sortStatus, filterBy) =>\n            handlerSetSortStatus(sortStatus, filterBy)\n          }\n        />\n      </div>\n      {!isLoaded ? (\n        <TodoList\n          todos={todos.slice(\n            currentPage * todosPerPage,\n            currentPage * todosPerPage + todosPerPage\n          )}\n          removeTodo={(uuid) => handlerRemoveTodo(uuid)}\n          changeTodoCondition={(elem) => handlerChangeTodoCondition(elem)}\n          changeTask={(elem, newText) => handlerChangeTask(elem, newText)}\n        ></TodoList>\n      ) : (\n        animatedLoader\n      )}\n\n      {todos.length > 0 && (\n        <Paginate\n          setCurrentPage={(value) => setCurrentPage(value)}\n          currentPage={currentPage}\n          countTodoElem={todos.length}\n          countElemPerPage={todosPerPage}\n        ></Paginate>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}